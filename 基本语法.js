// 语句：是为了完成某种任务而进行的操作。比如var a = 1 + 3;
// 表达式（expression）：指一个为了得到返回值的计算式。比如上面的1+3.
// 语句和表达式的区别：
/* 
语句主要为了进行某种操作，一般情况下不需要返回值；表达式则是为了得到返回值，一定会返回一个值。
凡是 JavaScript 语言中预期为值的地方，都可以使用表达式。比如，赋值语句的等号右边，预期是一个值，因此可以放置各种表达式。
*/

// 变量提升
/* 
JavaScript 引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。
这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升（hoisting）。
*/
(()=>{
    console.log(a); //undefined 也就是说var a 被提升到了函数头部，但是赋值还为赋值。
    console.log(b());
    function b(){
        console.log(a);
        return 3
    }
    var a = 10
})();


//标识符（identifier）：指的是用来识别各种值的合法名称。最常见的标识符就是变量名，以及后面要提到的函数名。


//用标签跳出循环
(()=>{
    let arr = [1,2,3,4]
   top: {
    break top
   }
})()